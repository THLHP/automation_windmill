summary: Validate Patients
value:
  css:
    recomputeallcomponent:
      container:
        class: ''
        style: ''
  fullscreen: false
  grid:
    - '12':
        fixed: true
        fullHeight: false
        h: 1
        w: 12
        x: 0
        'y': 0
      '3':
        fixed: true
        fullHeight: false
        h: 2
        w: 6
        x: 0
        'y': 0
      id: topbar
      data:
        id: topbar
        type: containercomponent
        actions: []
        configuration: {}
        customCss:
          container:
            class: '!p-0'
            style: ''
        numberOfSubgrids: 1
    - '12':
        fixed: false
        fullHeight: false
        h: 9
        w: 12
        x: 0
        'y': 1
      '3':
        fixed: false
        fullHeight: false
        h: 10
        w: 3
        x: 0
        'y': 2
      id: a
      data:
        id: a
        type: aggridinfinitecomponent
        actions: []
        componentInput:
          type: runnable
          autoRefresh: true
          fields:
            database:
              type: static
              value: '$res:f/dicoms/thlhp_database'
              fieldType: object
              format: resource-postgresql
            isDesc:
              type: evalv2
              expr: a.params.isDesc
              fieldType: string
            limit:
              type: evalv2
              expr: a.params.limit
              fieldType: string
            offset:
              type: evalv2
              expr: a.params.offset
              fieldType: string
            orderBy:
              type: evalv2
              expr: a.params.orderBy
              fieldType: string
            search:
              type: evalv2
              expr: a.params.search
              fieldType: string
          fieldType: any
          recomputeOnInputChanged: true
          runnable:
            type: runnableByName
            name: query validated patients
            inlineScript:
              content: '!inline query_validated_patients.inline_script.pg.sql'
              lock: ''
              language: postgresql
              path: f/dicoms/validate_patients/query_validated_patients
              schema:
                $schema: 'https://json-schema.org/draft/2020-12/schema'
                type: object
                properties:
                  database:
                    type: object
                    description: ''
                    format: resource-postgresql
                required:
                  - database
        configuration:
          allEditable:
            type: static
            value: false
          columnDefs:
            type: static
            value:
              - field: patient_id
                flex: 1
                headerName: patient_id
              - field: patient_name
                flex: 1
                headerName: patient_name
              - field: patient_sex
                flex: 1
                headerName: patient_sex
          compactness:
            type: static
            value: normal
          customActionsHeader:
            type: static
          extraConfig:
            type: static
            value: {}
          flex:
            type: static
            value: true
          footer:
            type: static
            value: true
          multipleSelectable:
            type: static
            value: false
          rowIdCol:
            type: static
            value: ''
          rowMultiselectWithClick:
            type: static
            value: true
          searchEnabled:
            type: static
            value: false
          selectFirstRowByDefault:
            type: static
            value: true
          wrapActions:
            type: static
            value: false
        customCss:
          container:
            class: ''
            style: ''
    - '12':
        fixed: false
        fullHeight: false
        h: 14
        w: 7
        x: 0
        'y': 10
      '3':
        fixed: false
        fullHeight: false
        h: 8
        w: 3
        x: 0
        'y': 12
      id: b
      data:
        id: b
        type: schemaformcomponent
        actions: []
        componentInput:
          type: static
          value:
            order:
              - unvalidated_patient_id
              - corrected_patient_id
              - corrected_patient_name
              - corrected_patient_sex
              - notes
            properties:
              corrected_patient_id:
                type: string
                description: If correct already then leave blank
                default: ''
              corrected_patient_name:
                type: string
                description: If correct already then leave blank
                default: ''
              corrected_patient_sex:
                type: string
                description: If correct already then leave blank
                default: ''
                enum:
                  - F
                  - M
                enumLabels:
                  F: F
                  M: M
              notes:
                type: string
                description: ''
                default: ''
                minRows: 3
              unvalidated_patient_id:
                type: string
                description: 'id that is being corrected, select from list above'
                default: ''
                disabled: true
                nullable: false
            required:
              - unvalidated_patient_id
          fieldType: schema
        configuration:
          defaultValues:
            type: evalv2
            connections:
              - id: author
                componentId: ctx
              - id: selectedRow
                componentId: a
            expr: >-
              return {unvalidated_patient_id: a.selectedRow.patient_id,
              authored_by: ctx.author }
          displayType:
            type: static
            value: false
          dynamicEnums:
            type: static
            value: {}
          largeGap:
            type: static
            value: false
        customCss:
          description:
            class: ''
            style: ''
          container:
            class: ''
            style: ''
          label:
            class: ''
            style: ''
    - '12':
        fixed: false
        fullHeight: false
        h: 4
        w: 5
        x: 7
        'y': 10
      '3':
        fixed: false
        fullHeight: false
        h: 2
        w: 1
        x: 1
        'y': 20
      id: d
      data:
        id: d
        type: htmlcomponent
        actions: []
        componentInput:
          type: templatev2
          connections:
            - id: selectedRow
              componentId: a
          eval: |-
            <h3>Unvalidated patient info</h3>
            &nbsp;
            <ul>
            <li><strong>ID:</strong> ${a.selectedRow.patient_id}</li>
            <li><strong>Name: </strong> ${a.selectedRow.patient_name}</li>
            <li><strong>Sex: </strong> ${a.selectedRow.patient_sex}</li>
            </ul>
          fieldType: template
        configuration: {}
        customCss:
          container:
            class: ''
            style: ''
    - '12':
        fixed: false
        fullHeight: false
        h: 1
        w: 5
        x: 7
        'y': 14
      '3':
        fixed: false
        fullHeight: false
        h: 1
        w: 1
        x: 0
        'y': 20
      id: c
      data:
        id: c
        type: buttoncomponent
        actions: []
        componentInput:
          type: runnable
          autoRefresh: false
          fields:
            authored_by:
              type: evalv2
              value: ''
              connections:
                - id: author
                  componentId: ctx
              expr: ctx.author
              fieldType: string
            correct_patient_sex:
              type: evalv2
              value: a.sele
              connections:
                - id: values
                  componentId: b
              expr: b.values.corrected_patient_sex
              fieldType: string
            corrected_patient_id:
              type: evalv2
              value: null
              connections:
                - id: values
                  componentId: b
              expr: b.values.corrected_patient_id
              fieldType: string
            corrected_patient_name:
              type: evalv2
              value: null
              connections:
                - id: values
                  componentId: b
              expr: b.values.corrected_patient_name
              fieldType: string
            database:
              type: static
              value: '$res:f/dicoms/thlhp_database'
              fieldType: object
              format: resource-postgresql
            notes:
              type: evalv2
              value: null
              connections:
                - id: values
                  componentId: b
              expr: b.values.notes
              fieldType: string
            original_patient_id:
              type: evalv2
              value: null
              connections:
                - id: selectedRow
                  componentId: a
              expr: a.selectedRow.patient_id
              fieldType: string
          fieldType: any
          recomputeOnInputChanged: false
          runnable:
            type: runnableByName
            name: insert validated patient
            inlineScript:
              content: '!inline insert_validated_patient.inline_script.pg.sql'
              lock: ''
              language: postgresql
              path: f/dicoms/validate_patients/insert_validated_patient
              schema:
                $schema: 'https://json-schema.org/draft/2020-12/schema'
                type: object
                properties:
                  authored_by:
                    type: string
                    description: ''
                    default: null
                    originalType: string
                  correct_patient_sex:
                    type: string
                    description: ''
                    default: null
                    originalType: string
                  corrected_patient_id:
                    type: string
                    description: ''
                    default: null
                    originalType: string
                  corrected_patient_name:
                    type: string
                    description: ''
                    default: null
                    originalType: string
                  database:
                    type: object
                    description: ''
                    format: resource-postgresql
                  notes:
                    type: string
                    description: ''
                    default: null
                    originalType: string
                  original_patient_id:
                    type: string
                    description: ''
                    default: null
                    originalType: string
                required:
                  - database
                  - original_patient_id
                  - corrected_patient_id
                  - corrected_patient_name
                  - correct_patient_sex
                  - authored_by
                  - notes
        configuration:
          afterIcon:
            type: static
            value: ''
          beforeIcon:
            type: static
            value: ''
          color:
            type: static
            value: blue
          confirmationModal:
            type: oneOf
            configuration:
              confirmationModal:
                description:
                  type: static
                  value: Are you sure?
                confirmationText:
                  type: static
                  value: Confirm
                title:
                  type: static
                  value: Title
              none: {}
            selected: none
          disabled:
            type: static
            value: false
          fillContainer:
            type: static
            value: true
          label:
            type: static
            value: Submit validation
          onError:
            type: oneOf
            configuration:
              close:
                id:
                  type: static
                  value: ''
              errorOverlay: {}
              gotoUrl:
                newTab:
                  type: static
                  value: true
                url:
                  type: static
                  value: ''
              open:
                id:
                  type: static
                  value: ''
              sendErrorToast:
                appendError:
                  type: static
                  value: true
                message:
                  type: static
                  value: An error occured
              setTab:
                setTab:
                  type: static
                  value: []
            selected: errorOverlay
          onSuccess:
            type: oneOf
            configuration:
              clearFiles:
                id:
                  type: static
                  value: ''
              close:
                id:
                  type: static
                  value: ''
              closeModal:
                modalId:
                  type: static
                  value: ''
              gotoUrl:
                newTab:
                  type: static
                  value: true
                url:
                  type: static
                  value: ''
              none: {}
              open:
                id:
                  type: static
                  value: ''
              openModal:
                modalId:
                  type: static
                  value: ''
              sendToast:
                message:
                  type: static
                  value: Successfully submitted!
              setTab:
                setTab:
                  type: static
                  value: []
            selected: sendToast
          size:
            type: static
            value: xs
          triggerOnAppLoad:
            type: static
            value: false
        customCss:
          button:
            class: ''
            style: ''
          container:
            class: ''
            style: ''
        horizontalAlignment: center
        recomputeIds:
          - bg_1
        verticalAlignment: center
    - '12':
        fixed: false
        fullHeight: false
        h: 9
        w: 5
        x: 7
        'y': 15
      '3':
        fixed: false
        fullHeight: false
        h: 8
        w: 2
        x: 0
        'y': 38
      id: h
      data:
        id: h
        type: chartjscomponentv2
        actions: []
        componentInput:
          type: evalv2
          connections:
            - id: result
              componentId: bg_0
          expr: "({\n\t\"labels\": [\"unvalidated\", \"validated\"],\n\t\"datasets\": [\n            {\n                label: \"Scans\",\n                data: [bg_0.result[0][\"unvalidated_patients\"], bg_0.result[0][\"validated_patients\"]],\n                backgroundColor: [\n                    '#ff99cc', // pastel red\n                    '#66b3ff'  // pastel blue\n                ],\n                borderColor: [\n                    '#ffffff', \n                    '#ffffff'\n                ]\n            }\n        ]\n})"
          fieldType: object
          noStatic: true
        configuration:
          type:
            type: static
            value: pie
          options:
            type: static
            value: {}
        customCss:
          container:
            class: ''
            style: ''
  hiddenInlineScripts:
    - type: runnableByName
      name: unvalidated scans count
      autoRefresh: true
      fields:
        database:
          type: static
          value: '$res:f/dicoms/thlhp_database'
          fieldType: object
          format: resource-postgresql
      inlineScript:
        content: '!inline unvalidated_scans_count.inline_script.pg.sql'
        lock: ''
        language: postgresql
        path: f/dicoms/validate_patients/unvalidated_scans_count
        schema:
          $schema: 'https://json-schema.org/draft/2020-12/schema'
          type: object
          properties:
            database:
              type: object
              description: ''
              format: resource-postgresql
          required:
            - database
      recomputeIds: []
      recomputeOnInputChanged: true
    - type: runnableByName
      name: recompute things
      autoRefresh: true
      fields: {}
      inlineScript:
        content: '!inline recompute_things.inline_script.frontend.js'
        language: frontend
        path: f/dicoms/validate_patients/recompute_things
        suggestedRefreshOn: []
      recomputeIds: []
      recomputeOnInputChanged: true
  hideLegacyTopBar: true
  mobileViewOnSmallerScreens: false
  norefreshbar: false
  subgrids:
    topbar-0:
      - '12':
          fixed: false
          fullHeight: false
          h: 1
          w: 6
          x: 0
          'y': 0
        '3':
          fixed: false
          fullHeight: false
          h: 1
          w: 6
          x: 0
          'y': 0
        id: title
        data:
          id: title
          type: textcomponent
          actions: []
          componentInput:
            type: templatev2
            connections:
              - id: summary
                componentId: ctx
            eval: '${ctx.summary}'
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
            disableNoText:
              type: static
              value: true
              fieldType: boolean
            style:
              type: static
              value: Body
            tooltip:
              type: evalv2
              value: ''
              connections:
                - id: author
                  componentId: ctx
              expr: '`Author: ${ctx.author}`'
              fieldType: text
          customCss:
            container:
              class: ''
              style: ''
            text:
              class: text-xl font-semibold whitespace-nowrap truncate
              style: ''
          horizontalAlignment: left
          verticalAlignment: center
      - '12':
          fixed: false
          fullHeight: false
          h: 1
          w: 6
          x: 6
          'y': 0
        '3':
          fixed: false
          fullHeight: false
          h: 1
          w: 3
          x: 0
          'y': 1
        id: recomputeall
        data:
          id: recomputeall
          type: recomputeallcomponent
          actions: []
          configuration: {}
          customCss:
            container:
              class: ''
              style: ''
          horizontalAlignment: right
          menuItems: []
          verticalAlignment: center
  theme:
    type: path
    path: f/app_themes/theme_0
  unusedInlineScripts: []
policy:
  execution_mode: publisher
  s3_inputs: []
  triggerables_v2:
    'a:rawscript/6b734ccdc9172fe182c047d3e2ab2a8fa6e4a9ab686b3e58abe96a6eb10e3933':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs:
        database: '$res:f/dicoms/thlhp_database'
    'bg_0:rawscript/d9422439498dfa4841cbdc496fc8ea0fba99620f9c0498dc126609399aa8654d':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs:
        database: '$res:f/dicoms/thlhp_database'
    'bg_1:rawscript/c36629d7d6b93bf73521c99d5b246c07d86582c32df6a4fee6803fe3e3bf711f':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs: {}
    'c:rawscript/20db337279f09e69b02331b9931134a21690ce08550fcdaed7e73661d2657b8c':
      allow_user_resources: []
      one_of_inputs: {}
      static_inputs:
        database: '$res:f/dicoms/thlhp_database'
